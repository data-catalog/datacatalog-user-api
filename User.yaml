openapi: 3.0.0
info:
  title: User
  version: '1.0'
  description: Data Catalog User API.
  contact:
    name: Kata SÃ¡ra Cseke
    email: katacseke@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: Unique identifier for user
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: definitions/UserResponse.yaml
              examples: {}
        '404':
          description: User not found
      operationId: getUser
      description: Get user by ID
    delete:
      summary: ''
      operationId: deleteUser
      responses:
        '204':
          description: User deleted
      description: Delete a specific user
      tags:
        - User
      security:
        - JWT: []
  /users:
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./definitions/UserResponse.yaml
              examples: {}
      operationId: getUsers
      description: Get all users.
    post:
      summary: ''
      operationId: createUser
      responses:
        '201':
          description: Created
        '422':
          description: Unprocessable entity.
      description: Create new user (registration).
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions/ApiKeyCreationRequest.yaml
            examples: {}
        description: User information for registration.
      tags:
        - User
  /users/login:
    post:
      summary: ''
      operationId: login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./definitions/UserLoginResponse.yaml
              examples: {}
        '401':
          description: Authentication failed. The username or password is not correct.
      description: Log user into the system.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions/UserLoginRequest.yaml
            examples: {}
      tags:
        - User
  /token_info:
    post:
      summary: ''
      operationId: tokenInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./definitions/TokenInfoResponse.yaml
              examples: {}
      description: It provides information about the token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions/TokenInfoRequest.yaml
        description: Contains the token.
      tags:
        - User
  /user/keys:
    get:
      summary: Your GET endpoint
      tags:
        - ApiKey
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./definitions/ApiKeyResponse.yaml
      operationId: getUserApiKeys
      description: Lists the api keys for the authenticated user. Requires authentication via access token.
      security:
        - JWT: []
    post:
      summary: ''
      operationId: createUserApiKey
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ./definitions/ApiKeyCreationResponse.yaml
        '422':
          description: Unprocessable Entity (WebDAV)
      description: Generates a new api key for the authenticated user. Requires that you are authenticated via access token.
      tags:
        - ApiKey
        - User
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions/ApiKeyCreationRequest.yaml
  '/user/keys/{keyId}':
    parameters:
      - schema:
          type: string
        name: keyId
        in: path
        required: true
        description: The id of the api key.
    get:
      summary: Your GET endpoint
      tags:
        - ApiKey
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./definitions/ApiKeyResponse.yaml
        '404':
          description: Not Found
      operationId: getUserApiKey
      description: View a single api key of the authenticated user. Requires that you are authenticated via access token.
      security:
        - JWT: []
    delete:
      summary: ''
      operationId: deleteUserApiKey
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      description: Removes an api key from the authenticated user. Requires that you are authenticated via access token.
      security:
        - JWT: []
      tags:
        - ApiKey
        - User
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Authentication is made by the JWT token sent in the Authorizationheader of the request.
tags:
  - name: Asset
  - name: User
  - name: ApiKey
